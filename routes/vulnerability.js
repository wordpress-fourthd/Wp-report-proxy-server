const express = require('express');
const axios = require('axios');
const authenticate = require('../middleware/auth');
const router = express.Router();

const axiosInstance = axios.create({
  timeout: 10000,
  headers: {
    'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (FD-Maintenance/1.0)',
    'Accept': 'application/json'
  }
});


router.post('/', authenticate, async (req, res) => {
  const { core_version, plugins = [], themes = [] } = req.body;

  const results = {
    site_url: req.site_url,
    core: null,
    plugins: [],
    themes: []
  };

  try {
    // Check Core
    try {
      const coreRes = await axiosInstance.get(`https://www.wpvulnerability.com/api/core/${core_version}`);
      results.core = coreRes.data;
    } catch (err) {
      console.error('❌ Core fetch failed:', err.message);
      results.core = { error: 'Failed to fetch core vulnerabilities' };
    }

    // Check Plugins
    results.plugins = await Promise.all(
      plugins.map(async ({ slug, version }) => {
        try {
          const url = `https://www.wpvulnerability.com/api/plugins/${slug}/${version}`;
          const pluginRes = await axiosInstance.get(url);
          return {
            slug,
            version,
            vulnerabilities: pluginRes.data
          };
        } catch (err) {
          console.error(`❌ Plugin fetch failed for ${slug}:`, err.message);
          return { slug, version, error: 'Failed to fetch' };
        }
      })
    );

    // Check Themes
    results.themes = await Promise.all(
      themes.map(async ({ slug, version }) => {
        try {
          const url = `https://www.wpvulnerability.com/api/themes/${slug}/${version}`;
          const themeRes = await axiosInstance.get(url);
          return {
            slug,
            version,
            vulnerabilities: themeRes.data
          };
        } catch (err) {
          console.error(`❌ Theme fetch failed for ${slug}:`, err.message);
          return { slug, version, error: 'Failed to fetch' };
        }
      })
    );

    // Send final results
    res.json(results);
  } catch (err) {
    console.error('❌ Server error:', err.message);
    res.status(500).json({
      error: 'Server error during vulnerability scan.',
      detail: err.message
    });
  }
});

module.exports = router;
